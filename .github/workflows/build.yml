name: Test-Build-Release

on:
  pull_request:
  push:
    # tags: v[12].[0-9]+.[0-9]+

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    needs: [build-ginkou]
    name: Build Windows App
    runs-on: windows-2019
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Submodule Clone
        run: git submodule update --init --recursive

      - uses: actions/cache@v2
        id: app-cache
        with:
          path: |
            D:\a\ginkou-flatpak\ginkou-flatpak\windows\
          key: ${{ runner.os }}-1npm-${{ hashFiles('**/windows') }}-${{ hashFiles('**/ginkou/yarn.lock') }}-${{ hashFiles('**/ginkou-loader/Cargo.lock') }}-${{ hashFiles('**/melwalletd/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('**/windows') }}
     
      - uses: actions/download-artifact@v2
        with:
          name: ginkou-public
          path: D:\a\ginkou-flatpak\ginkou-flatpak\windows\ginkou-public


      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Install latest rust stable
        # if: steps.app-cache.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable-i686-pc-windows-msvc
      # - if: steps.app-cache.outputs.cache-hit != 'true'
      - run: cd windows; bash build-windows.bash


      - uses: actions/upload-artifact@v2
        with:
          name: ginkou.exe
          path: D:\a\ginkou-flatpak\ginkou-flatpak\windows\Output\mellis-windows-setup.exe
  
  build-flatpak-manifest:
    name: Build manifest
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout
        uses: actions/checkout@v2
      - name: Submodule Clone
        run: git submodule update --init --recursive
       
      - name: Build Flatpak manifest
        run: cd flatpak; ./build-flatpak.sh --manifest --release 

      - uses: actions/upload-artifact@v2
        with:
          name: flatpak-manifest
          path: flatpak/org.themelio.Wallet.yml
      
  build-ubuntu:
    name: Build Flatpak Package
    runs-on: ubuntu-latest
    needs: [build-flatpak-manifest]

    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-40
      options: --privileged
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Submodule Clone
        run: git submodule update --init --recursive
      - uses: actions/download-artifact@v2
        with:
          # created by 'build-windows'
          name: flatpak-manifest
          path: flatpak

      - run: ls
      - name: Build Flatpak
        # if: steps.flatpak-cache.outputs.cache-hit != 'true'
        uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v4
        with:
          bundle: ginkou.flatpak
          manifest-path: flatpak/org.themelio.Wallet.yml
          cache-key: flatpak-${{ hashFiles('**/flatpak/org.themelio.Wallet.yml')}}


      # - uses: actions/upload-artifact@v2
      #   if: steps.flatpak-cache.outputs.cache-hit == 'true'
      #   with:
      #     name: ginkou-x86_64
      #     path: ginkou.flatpak

  build-ginkou:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Submodule Clone
        run: git submodule update --init --recursive

      - uses: actions/cache@v2
        id: ginkou-cache
        with:
          path: |
            /Users/runner/work/ginkou-flatpak/ginkou-flatpak/mac/artifacts/ginkou-public
          key: ${{ runner.os }}-npm-${{ hashFiles('**/ginkou/yarn.lock') }}-debug
          restore-keys: ${{ runner.os }}-npm-${{ hashFiles('**/ginkou/yarn.lock') }}-debug

      - name: install ginkou
        if: steps.ginkou-cache.outputs.cache-hit != 'true'
        run: ./mac/build-mac.sh --ginkou

      - uses: actions/upload-artifact@v2
        with:
          name: ginkou-public
          path: mac/artifacts/ginkou-public/

  mac-ginkou-loader:
    runs-on: macos-latest
    name: Build Macos Ginkou-loader
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Submodule Clone
        run: git submodule update --init --recursive

      - uses: actions/cache@v2
        id: ginkou-loader-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            /Users/runner/work/ginkou-flatpak/ginkou-flatpak/mac/artifacts/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/ginkou-loader/Cargo.lock') }}-debug
          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/ginkou-loader/Cargo.lock') }}-debug

      - name: Install rust toolchain
        if: steps.ginkou-loader-cache.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install ginkou-loader
        if: steps.ginkou-loader-cache.outputs.cache-hit != 'true'
        run: ./mac/build-mac.sh --ginkou-loader
      - uses: actions/upload-artifact@v2
        with:
          name: mac-ginkou-loader
          path: mac/artifacts/ginkou-loader

  mac-melwalletd:
    runs-on: macos-latest
    name: Build Macos melwalletd

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Submodule Clone
        run: git submodule update --init --recursive

      - uses: actions/cache@v2
        id: melwalletd-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            /Users/runner/work/ginkou-flatpak/ginkou-flatpak/mac/artifacts/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/melwalletd/Cargo.lock') }}-debug
          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/melwalletd/Cargo.lock') }}-debug

      - name: Install rust toolchain
        if: steps.melwalletd-cache.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install melwalletd
        if: steps.melwalletd-cache.outputs.cache-hit != 'true'
        run: ./mac/build-mac.sh --melwalletd

      - uses: actions/upload-artifact@v2
        with:
          name: mac-melwalletd
          path: mac/artifacts/melwalletd

  build-mac:
    name: Build MacOS App
    needs: [mac-ginkou-loader, build-ginkou, mac-melwalletd]
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Submodule Clone
        run: git submodule update --init --recursive

      - uses: actions/cache@v2
        id: cache
        with:
          path: /Users/runner/work/ginkou-flatpak/ginkou-flatpak/mac/
          key: ${{ runner.os }}-ginkou.app-${{ hashFiles('**/mac') }}-debug-moss
      - run: ls mac;
      - run: ls ~/;
      - name: Install create-dmg
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install create-dmg

      # download all artifacts
      - uses: actions/download-artifact@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          name: mac-ginkou-loader
          path: mac/artifacts/

      - uses: actions/download-artifact@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          name: ginkou-public
          path: mac/artifacts/ginkou-public

      - uses: actions/download-artifact@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          name: mac-melwalletd
          path: mac/artifacts/

      # restore executable attribute
      - run: ls
      - run: chmod +x mac/artifacts/*
      - run: ls -ls mac/artifacts

      - if: steps.cache.outputs.cache-hit != 'true'
        run: ./mac/build-mac.sh --app --dmg
      - run: ls mac; ls mac/artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: ginkou.dmg
          path: mac/ginkou.dmg

  release:
    needs: [build-ubuntu, build-mac, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        with:
          # created by 'build-ubuntu'
          name: ginkou-x86_64
      - uses: actions/download-artifact@v2
        with:
          # created by 'build-mac'
          name: ginkou.dmg
      - uses: actions/download-artifact@v2
        with:
          # created by 'build-windows'
          name: ginkou.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')

        with:
          draft: true
          body: this is a test
          files: |
            ginkou.flatpak
            ginkou.dmg
            mellis-windows-setup.exe

# This is a basic workflow to help you get started with Actions

