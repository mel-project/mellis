name: TestAndBuild

on:
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always
  CARGO_HOME: "/usr/local/cargo/"
#  CARGO_TARGET_DIR: "/usr/local/cargo/target"
  RUSTUP_HOME: "/usr/local/rustup"
  SCCACHE_DIR: "/usr/local/sccache"
  RUSTC_WRAPPER: "/usr/local/bin/sccache"
  npm_config_cache: "/usr/local/npm-cache"
  YARN_CACHE_FOLDER: "/usr/local/npm-cache"
#  WINEPREFIX: "/usr/local/wine"

jobs:
#  ginkou-loader-build-linux:
#    runs-on: self-hosted
#
#    container:
#      image: ghcr.io/themeliolabs/rust-gtk:latest
#      volumes:
#        - /usr/local/cargo/git:/usr/local/cargo/git
#        - /usr/local/cargo/registry:/usr/local/cargo/registry
#        - /usr/local/sccache:/usr/local/sccache
#        - /usr/local/rustup:/usr/local/rustup
#        - /var/lib/docker:/var/lib/docker
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive --remote ginkou-loader
#
#      - name: Install default toolchain
#        run: rustup default stable
#
#      - name: Update Rust
#        run: rustup update
#
#      - name: Download SCCache
#        run: wget https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Extract SCCache
#        run: tar -xf sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Move SCCache
#        run: mv sccache-v0.2.15-x86_64-unknown-linux-musl/sccache /usr/local/bin/sccache
#
#      - name: Make SCCache Executable
#        run: chmod +x /usr/local/bin/sccache
#
#      - name: Clean Up Temporary SCCache Bits
#        run: rm -rf sccache-v0.2.15-x86_64-unknown-linux-musl*
#
#      - name: Download Mold
#        run: wget https://github.com/rui314/mold/releases/download/v1.2.1/mold-1.2.1-x86_64-linux.tar.gz
#
#      - name: Extract Mold
#        run: tar -xf mold-1.2.1-x86_64-linux.tar.gz
#
#      - name: Copy Mold Files
#        run: cp -a mold-1.2.1-x86_64-linux/* /usr/local/
#
#      - name: Clean Up Temporary Mold Bits
#        run: rm -rf mold-1.2.1-x86_64-linux
#
#      - name: Build Ginkou-Loader
#        run: mold --run cargo build --target=x86_64-unknown-linux-gnu --locked --manifest-path ginkou-loader/Cargo.toml
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ginkou-loader-linux-dev
#          path: /usr/local/cargo/target/x86_64-unknown-linux-gnu/debug/ginkou-loader

  ginkou-loader-build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Cargo Home
        run: sudo mkdir -p /usr/local/cargo

      - name: Change Cargo Home Ownership
        run: sudo chown $USER /usr/local/cargo

      - name: Create Rustup Directory
        run: sudo mkdir -p /usr/local/rustup

      - name: Change Rustup Directory Ownership
        run: sudo chown $USER /usr/local/rustup

      - name: Create SCCache Directory
        run: sudo mkdir -p /usr/local/sccache

      - name: Change SCCache Directory Ownership
        run: sudo chown $USER /usr/local/sccache

      - name: Install SCCache
        run: brew install sccache

      - name: Cache Rust
        uses: actions/cache@v3
        working-directory: ./ginkou-loader
        with:
          path: |
            /usr/local/cargo/bin/
            /usr/local/cargo/registry/index/
            /usr/local/cargo/registry/cache/
            /usr/local/sccache
            /usr/local/rustup/toolchains/
            /usr/local/rustup/update-hashes/
            /usr/local/cargo/git/db/
          key: ${{ runner.os }}-ginkou-loader-${{ hashFiles('**/Cargo.lock') }}

      - name: Add Default Toolchain
        run: rustup default stable

      - name: Update Rust
        run: rustup update

      - name: Submodule Clone
        run: git submodule update --init --recursive --remote ginkou-loader

      - name: Build Ginkou-Loader
        run: cargo build --locked --manifest-path ginkou-loader/Cargo.toml

      - uses: actions/upload-artifact@v3
        with:
          name: ginkou-loader-macos-dev
          path: /Users/runner/work/mellis/mellis/ginkou-loader

#  ginkou-loader-build-windows:
#    runs-on: self-hosted
#
#    container:
#      image: ghcr.io/themeliolabs/windows-32-bit:latest
#      volumes:
#        - /usr/local/cargo/git:/usr/local/cargo/git
#        - /usr/local/cargo/registry:/usr/local/cargo/registry
#        - /usr/local/sccache:/usr/local/sccache
#        - /usr/local/rustup:/usr/local/rustup
#        - /var/lib/docker:/var/lib/docker
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive --remote ginkou-loader
#
#      - name: Add Default Toolchain
#        run: rustup default stable
#
#      - name: Download SCCache
#        run: wget https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Extract SCCache
#        run: tar -xf sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Move SCCache
#        run: mv sccache-v0.2.15-x86_64-unknown-linux-musl/sccache /usr/local/bin/sccache
#
#      - name: Make SCCache Executable
#        run: chmod +x /usr/local/bin/sccache
#
#      - name: Clean Up Temporary SCCache Bits
#        run: rm -rf sccache-v0.2.15-x86_64-unknown-linux-musl*
#
#      - name: Add Windows 32-Bit Toolchain
#        run: rustup target add i686-pc-windows-gnu
#
#      - name: Build Ginkou-Loader
#        run: cargo build --locked --target=i686-pc-windows-gnu --manifest-path ginkou-loader/Cargo.toml
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ginkou-loader-windows-dev
#          path: /usr/local/cargo/target/i686-pc-windows-gnu/debug/ginkou-loader.exe
#
#  melwalletd-build-linux:
#    runs-on: self-hosted
#
#    container:
#      image: rust:latest
#      volumes:
#        - /usr/local/cargo/git:/usr/local/cargo/git
#        - /usr/local/cargo/registry:/usr/local/cargo/registry
#        - /usr/local/sccache:/usr/local/sccache
#        - /usr/local/rustup:/usr/local/rustup
#        - /var/lib/docker:/var/lib/docker
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive --remote melwalletd
#
#      - name: Add Default Toolchain
#        run: rustup default stable
#
#      - name: Update Rust
#        run: rustup update
#
#      - name: Download SCCache
#        run: wget https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Extract SCCache
#        run: tar -xf sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Move SCCache
#        run: mv sccache-v0.2.15-x86_64-unknown-linux-musl/sccache /usr/local/bin/sccache
#
#      - name: Make SCCache Executable
#        run: chmod +x /usr/local/bin/sccache
#
#      - name: Clean Up Temporary SCCache Bits
#        run: rm -rf sccache-v0.2.15-x86_64-unknown-linux-musl*
#
#      - name: Download Mold
#        run: wget https://github.com/rui314/mold/releases/download/v1.2.1/mold-1.2.1-x86_64-linux.tar.gz
#
#      - name: Extract Mold
#        run: tar -xf mold-1.2.1-x86_64-linux.tar.gz
#
#      - name: Copy Mold Files
#        run: cp -a mold-1.2.1-x86_64-linux/* /usr/local/
#
#      - name: Clean Up Temporary Mold Bits
#        run: rm -rf mold-1.2.1-x86_64-linux
#
#      - name: Build MelwalletD
#        run: mold --run cargo build --locked --manifest-path melwalletd/Cargo.toml
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: melwalletd-linux-dev
#          path: /usr/local/cargo/target/debug/melwalletd
#
#  melwalletd-build-macos:
#    runs-on: self-hosted
#
#    container:
#      image: joseluisq/rust-linux-darwin-builder:latest
#      volumes:
#        - /usr/local/cargo/git:/usr/local/cargo/git
#        - /usr/local/cargo/registry:/usr/local/cargo/registry
#        - /usr/local/sccache:/usr/local/sccache
#        - /usr/local/rustup:/usr/local/rustup
#        - /var/lib/docker:/var/lib/docker
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Clone MelwalletD Submodule
#        run: git submodule update --init --recursive --remote melwalletd
#
#      - name: Add Default Toolchain
#        run: rustup default stable
#
#      - name: Add MacOS Toolchain
#        run: rustup target add x86_64-apple-darwin
#
#      - name: Copy Cargo Configuration
#        run: cp /root/.cargo/config /usr/local/cargo/config
#
#      - name: Update Apt
#        run: apt update
#
#      - name: Install Wget
#        run: apt install -y wget
#
#      - name: Download SCCache
#        run: wget https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Extract SCCache
#        run: tar -xf sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Move SCCache
#        run: mv sccache-v0.2.15-x86_64-unknown-linux-musl/sccache /usr/local/bin/sccache
#
#      - name: Make SCCache Executable
#        run: chmod +x /usr/local/bin/sccache
#
#      - name: Clean Up Temporary SCCache Bits
#        run: rm -rf sccache-v0.2.15-x86_64-unknown-linux-musl*
#
#      - name: Download Mold
#        run: wget https://github.com/rui314/mold/releases/download/v1.2.1/mold-1.2.1-x86_64-linux.tar.gz
#
#      - name: Extract Mold
#        run: tar -xf mold-1.2.1-x86_64-linux.tar.gz
#
#      - name: Copy Mold Files
#        run: cp -a mold-1.2.1-x86_64-linux/* /usr/local/
#
#      - name: Clean Up Temporary Mold Bits
#        run: rm -rf mold-1.2.1-x86_64-linux
#
#      - name: Build MelwalletD
#        env:
#          CC: "o64-clang"
#          CXX: "o64-clang++"
#        run: mold --run cargo build --locked --target x86_64-apple-darwin --manifest-path melwalletd/Cargo.toml
#
#      - name: Remove Cargo Configuration
#        run: rm /usr/local/cargo/config
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: melwalletd-macos-dev
#          path: /usr/local/cargo/target/x86_64-apple-darwin/debug/melwalletd
#
#  melwalletd-build-windows:
#    runs-on: self-hosted
#
#    container:
#      image: ghcr.io/themeliolabs/windows-32-bit:latest
#      volumes:
#        - /usr/local/cargo/git:/usr/local/cargo/git
#        - /usr/local/cargo/registry:/usr/local/cargo/registry
#        - /usr/local/sccache:/usr/local/sccache
#        - /usr/local/rustup:/usr/local/rustup
#        - /var/lib/docker:/var/lib/docker
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive --remote melwalletd
#
#      - name: Add Default Toolchain
#        run: rustup default stable
#
#      - name: Add Windows 32-Bit Toolchain
#        run: rustup target add i686-pc-windows-gnu
#
#      - name: Download SCCache
#        run: wget https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Extract SCCache
#        run: tar -xf sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
#
#      - name: Move SCCache
#        run: mv sccache-v0.2.15-x86_64-unknown-linux-musl/sccache /usr/local/bin/sccache
#
#      - name: Make SCCache Executable
#        run: chmod +x /usr/local/bin/sccache
#
#      - name: Clean Up Temporary SCCache Bits
#        run: rm -rf sccache-v0.2.15-x86_64-unknown-linux-musl*
#
#      - name: Build MelwalletD
#        run: cargo build --locked --target=i686-pc-windows-gnu --manifest-path melwalletd/Cargo.toml
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: melwalletd-windows-dev
#          path: /usr/local/cargo/target/i686-pc-windows-gnu/debug/melwalletd.exe
#
#  ginkou-test:
#    runs-on: self-hosted
#
#    container:
#      image: node:latest
#      volumes:
#        - /usr/local/npm-cache:/usr/local/npm-cache
#        - /var/lib/docker:/var/lib/docker
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Clone Ginkou Submodule
#        run: git submodule update --init --recursive --remote ginkou
#
#      - name: Run Yarn Install
#        run: yarn install --prefer-offline --cwd ginkou
#
#      - name: Run NPM Test
#        run: npm run test --prefix ginkou
#
#  ginkou-build:
#    runs-on: self-hosted
#
#    container:
#      image: node:latest
#      volumes:
#        - /usr/local/npm-cache:/usr/local/npm-cache
#        - /var/lib/docker:/var/lib/docker
#
#    needs:
#      - ginkou-test
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Clone Ginkou Submodule
#        run: git submodule update --init --recursive --remote ginkou
#
#      - name: Run Yarn Install
#        run: yarn install --prefer-offline --cwd ginkou
#
#      - name: Run NPM Build
#        env:
#          BUILD: "development"
#        run: npm run build --prefix ginkou
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ginkou-public-dev
#          path: ginkou/public
#
#  mellis-create-dmg-macos:
#    runs-on: macos-latest
#
#    needs:
#      - ginkou-loader-build-macos
#      - melwalletd-build-macos
#      - ginkou-build
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: ginkou-loader-macos-dev
#          path: ginkou-loader
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: melwalletd-macos-dev
#          path: melwalletd
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: ginkou-public-dev
#          path: ginkou-public
#
#      - name: Install Create-DMG
#        run: brew install create-dmg
#
#      - name: Copy Template
#        run: cp -r mac/template.app mellis.app
#
#      - name: Copy Template
#        run: cp -r mac/template.app mellis.app
#
#      - name: Create Resources Directory
#        run: mkdir mellis.app/Contents/MacOS/res
#
#      - name: Move Ginkou-Loader Into The Resources Directory
#        run: mv ginkou-loader mellis.app/Contents/MacOS/res/
#
#      - name: Move MelwalletD Into The Resources Directory
#        run: mv melwalletd mellis.app/Contents/MacOS/res/
#
#      - name: Move Ginkou-Public Into The Resources Directory
#        run: mv ginkou-public mellis.app/Contents/MacOS/res/
#
#      - name: Create User Symlink
#        run: ln -s /Applications mellis.app/
#
#      - name: Create Mellis DMG File
#        run: create-dmg mellis.dmg mellis.app
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: mellis-dmg
#          path: mellis.dmg
#
#  mellis-create-installer-windows:
#    runs-on: self-hosted
#
#    container:
#      image: ghcr.io/themeliolabs/wine:latest
#
#    needs:
#      - ginkou-loader-build-windows
#      - melwalletd-build-windows
#      - ginkou-build
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Create Artifacts Directory
#        run: mkdir -p windows/artifacts
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: ginkou-loader-windows-dev
#          path: ginkou-loader.exe
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: melwalletd-windows-dev
#          path: melwalletd.exe
#
#      - name: Move Ginkou-Loader Into The Artifacts Directory
#        run: mv ginkou-loader.exe windows/artifacts/
#
#      - name: Move MelwalletD Into The Artifacts Directory
#        run: mv melwalletd.exe windows/artifacts/
#
#      - name: Create Wine Directory
#        run: mkdir -p ~/.wine
#
#      - name: Create Windows Installer
#        run: wine /usr/local/iscc/ISCC.exe windows/setup.iss
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: mellis-windows-installer-dev
#          path: windows/Output/mellis-windows-setup.exe
#
#  mellis-create-flatpak:
#    runs-on: self-hosted
#
#    container:
#      image: bilelmoussaoui/flatpak-github-actions:gnome-40
#      options: --privileged
#
#    needs:
#      - ginkou-loader-build-linux
#      - melwalletd-build-linux
#      - ginkou-build
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: ginkou-loader-linux-dev
#          path: /tmp
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: melwalletd-linux-dev
#          path: /tmp
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: ginkou-public-dev
#          path: /tmp/public
#
#      - name: Add Flathub Repository
#        run: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
#
#      - uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v4
#        with:
#          bundle: mellis.flatpak
#          manifest-path: flatpak/org.themelio.Wallet-ci.yml
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: mellis-flatpak-dev
#          path: mellis.flatpak