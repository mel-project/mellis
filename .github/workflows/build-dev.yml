name: TestAndBuild

on:
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  ginkou-loader-build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Submodule Clone
        run: git submodule update --init --recursive

#      - uses: actions/cache@v2
#        id: ginkou-cache
#        with:
#          path: |
#            /Users/runner/work/ginkou-flatpak/ginkou-flatpak/mac/artifacts/ginkou-public
#          key: ${{ runner.os }}-npm-${{ hashFiles('**/ginkou/') }}-debug
#          # restore-keys: ${{ runner.os }}-npm-${{ hashFiles('**/ginkou/yarn.lock') }}-debug

      - name: Build Ginkou-Loader
        run: cargo build --locked --manifest-path ginkou-loader/Cargo.toml

      - uses: actions/upload-artifact@v3
        with:
          name: ginkou-loader-macos-dev
          path: ginkou-loader/target/debug/ginkou-loader

  melwalletd-build-macos:
    runs-on: self-hosted

    container:
      image: joseluisq/rust-linux-darwin-builder:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone MelwalletD Submodule
        run: git submodule update --init --recursive --remote melwalletd

      - name: Add Default Toolchain
        run: rustup default stable

      - name: Add MacOS Toolchain
        run: rustup target add x86_64-apple-darwin

      - name: Create Cargo Path
        run: mkdir -p ~/.cargo

      - name: Copy Cargo Configuration
        run: cp /root/.cargo/config ~/.cargo/config

      - name: Build MelwalletD
        env:
          CC: "o64-clang"
          CXX: "o64-clang++"
        run: cargo build --locked --target x86_64-apple-darwin --manifest-path melwalletd/Cargo.toml

      - uses: actions/upload-artifact@v3
        with:
          name: melwalletd-macos-dev
          path: melwalletd/target/x86_64-apple-darwin/debug/melwalletd


  ginkou-test:
    runs-on: self-hosted

    steps:
      - name: Currently Disabled
        run: echo "Tests are currently disabled."

#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Update Apt
#        run: sudo apt update
#
#      - name: Install NPM
#        run: sudo apt install -y npm
#
#      - name: Clone Ginkou Submodule
#        run: git submodule update --init --recursive --remote ginkou
#
#      - name: Run NPM Install
#        run: npm install --prefix ginkou
#
#      - name: Run NPM Test
#        run: npm run test --prefix ginkou


  ginkou-build:
    runs-on: self-hosted

    needs:
      - ginkou-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update Apt
        run: sudo apt update

      - name: Install NPM
        run: sudo apt install -y npm

      - name: Clone Ginkou Submodule
        run: git submodule update --init --recursive --remote ginkou

      - name: Run NPM Install
        run: npm install --prefix ginkou

      - name: Run NPM Build
        env:
          BUILD: "development"
        run: npm run build --prefix ginkou

      - uses: actions/upload-artifact@v3
        with:
          name: ginkou-public-dev
          path: ginkou/public

  ginkou-loader-create-dmg-macos:
    runs-on: macos-latest

    needs:
      - ginkou-loader-build-macos
      - melwalletd-build-macos
      - ginkou-build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: ginkou-loader-macos-dev
          path: ginkou-loader

      - uses: actions/download-artifact@v3
        with:
          name: melwalletd-macos-dev
          path: melwalletd

      - uses: actions/download-artifact@v3
        with:
          name: ginkou-public-dev
          path: ginkou-public

      - name: Install Create-DMG
        run: brew install create-dmg

      - name: Copy Template
        run: cp -r mac/template.app mellis.app

      - name: Copy Template
        run: cp -r mac/template.app mellis.app

      - name: Create Resources Directory
        run: mkdir mellis.app/Contents/MacOS/res

      - name: Move Ginkou-Loader Into The Resources Directory
        run: mv ginkou-loader mellis.app/Contents/MacOS/res/

      - name: Move MelwalletD Into The Resources Directory
        run: mv melwalletd mellis.app/Contents/MacOS/res/

      - name: Move Ginkou-Public Into The Resources Directory
        run: mv ginkou-public mellis.app/Contents/MacOS/res/

      - name: Create User Symlink
        run: ln -s /Applications mellis.app/

      - name: Create Mellis DMG File
        run: create-dmg mellis.dmg mellis.app

      - uses: actions/upload-artifact@v3
        with:
          name: mellis-dmg
          path: mellis.dmg



#  build-windows:
#    needs: [build-ginkou]
#    name: Build Windows App
#    runs-on: self-hosted
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive
#
##      - uses: actions/cache@v2
##        id: app-cache
##        with:
##          path: |
##            D:\a\ginkou-flatpak\ginkou-flatpak\windows\
##          key: ${{ runner.os }}-1npm-${{ hashFiles('**/windows') }}-${{ hashFiles('**/ginkou/yarn.lock') }}-${{ hashFiles('**/ginkou-loader/Cargo.lock') }}-${{ hashFiles('**/melwalletd/Cargo.lock') }}
##          restore-keys: ${{ runner.os }}-${{ hashFiles('**/windows') }}
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: ginkou-public
#          path: D:\a\ginkou-flatpak\ginkou-flatpak\windows\artifacts\ginkou-public
#
#      - name: Install latest rust stable
#        if: steps.app-cache.outputs.cache-hit != 'true'
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable-i686-pc-windows-msvc
#      - if: steps.app-cache.outputs.cache-hit != 'true'
#        run: cd windows; bash build-windows.bash
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: ginkou.exe
#          path: D:\a\ginkou-flatpak\ginkou-flatpak\windows\Output\mellis-windows-setup.exe
#
#  build-flatpak-manifest:
#    name: Build manifest
#    runs-on: self-hosted
#
#    steps:
#      - name: Update Apt
#        run: sudo apt update
#
#      - name: Install Gettext
#        run: sudo apt install -y gettext
#
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive
#
#      - name: Build Flatpak manifest
#        run: cd flatpak; ./build-flatpak.sh --manifest --release
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: flatpak-manifest
#          path: flatpak/org.themelio.Wallet.yml
#
#  build-ubuntu:
#    name: Build Flatpak Package
#    runs-on: self-hosted
#    needs: [build-flatpak-manifest]
#
#    container:
#      image: bilelmoussaoui/flatpak-github-actions:gnome-40
#      options: --privileged
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Submodule Clone
#        run: git submodule update --init --recursive
#      - uses: actions/download-artifact@v2
#        with:
#          # created by 'build-windows'
#          name: flatpak-manifest
#          path: flatpak
#
#      - run: ls
#      - name: Build Flatpak
#        # if: steps.flatpak-cache.outputs.cache-hit != 'true'
#        uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v4
#        with:
#          bundle: ginkou.flatpak
#          manifest-path: flatpak/org.themelio.Wallet.yml
#          cache-key: flatpak-${{ hashFiles('**/flatpak/org.themelio.Wallet.yml')}}
#
#
#      # - uses: actions/upload-artifact@v2
#      #   if: steps.flatpak-cache.outputs.cache-hit == 'true'
#      #   with:
#      #     name: ginkou-x86_64
#      #     path: ginkou.flatpak
#
#  mac-ginkou-loader:
#    runs-on: macos-latest
#    name: Build Macos Ginkou-loader
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive
#
#      - uses: actions/cache@v2
#        id: ginkou-loader-cache
#        with:
#          path: |
#            ~/.cargo/bin/
#            ~/.cargo/registry/index/
#            ~/.cargo/registry/cache/
#            ~/.cargo/git/db/
#            /Users/runner/work/ginkou-flatpak/ginkou-flatpak/mac/artifacts/
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/ginkou-loader/Cargo.lock') }}-debug
#          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/ginkou-loader/Cargo.lock') }}-debug
#
#      - name: Install rust toolchain
#        if: steps.ginkou-loader-cache.outputs.cache-hit != 'true'
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#
#      - name: install ginkou-loader
#        if: steps.ginkou-loader-cache.outputs.cache-hit != 'true'
#        run: ./mac/build-mac.sh --ginkou-loader
#      - uses: actions/upload-artifact@v2
#        with:
#          name: mac-ginkou-loader
#          path: mac/artifacts/ginkou-loader
#
#  mac-melwalletd:
#    runs-on: macos-latest
#    name: Build Macos melwalletd
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive
#
##      - uses: actions/cache@v2
##        id: melwalletd-cache
##        with:
##          path: |
##            ~/.cargo/bin/
##            ~/.cargo/registry/index/
##            ~/.cargo/registry/cache/
##            ~/.cargo/git/db/
##            /Users/runner/work/ginkou-flatpak/ginkou-flatpak/mac/artifacts/
##          key: ${{ runner.os }}-cargo-${{ hashFiles('**/melwalletd/Cargo.lock') }}-debug
##          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/melwalletd/Cargo.lock') }}-debug
#
#      - name: Install rust toolchain
#        if: steps.melwalletd-cache.outputs.cache-hit != 'true'
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#
#      - name: install melwalletd
#        if: steps.melwalletd-cache.outputs.cache-hit != 'true'
#        run: ./mac/build-mac.sh --melwalletd
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: mac-melwalletd
#          path: mac/artifacts/melwalletd
#
#  build-mac:
#    name: Build MacOS App
#    needs: [mac-ginkou-loader, build-ginkou, mac-melwalletd]
#    runs-on: macos-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Submodule Clone
#        run: git submodule update --init --recursive
#
#      - uses: actions/cache@v2
#        id: cache
#        with:
#          path: /Users/runner/work/ginkou-flatpak/ginkou-flatpak/mac/
#          key: ${{ runner.os }}-ginkou.app-${{ hashFiles('**/') }}-debug
#      - run: ls mac;
#      - run: ls ~/;
#      - name: Install create-dmg
#        if: steps.cache.outputs.cache-hit != 'true'
#        run: brew install create-dmg
#
#      # download all artifacts
#      - uses: actions/download-artifact@v2
#        if: steps.cache.outputs.cache-hit != 'true'
#        with:
#          name: mac-ginkou-loader
#          path: mac/artifacts/
#
#      - uses: actions/download-artifact@v2
#        if: steps.cache.outputs.cache-hit != 'true'
#        with:
#          name: ginkou-public
#          path: mac/artifacts/ginkou-public
#
#      - uses: actions/download-artifact@v2
#        if: steps.cache.outputs.cache-hit != 'true'
#        with:
#          name: mac-melwalletd
#          path: mac/artifacts/
#
#      # restore executable attribute
#      - run: ls
#      - run: chmod +x mac/artifacts/*
#      - run: ls -ls mac/artifacts
#
#      - if: steps.cache.outputs.cache-hit != 'true'
#        run: ./mac/build-mac.sh --app --dmg
#      - run: ls mac; ls mac/artifacts
#      - uses: actions/upload-artifact@v2
#        with:
#          name: ginkou.dmg
#          path: mac/ginkou.dmg
#
#  release:
#    needs: [build-ubuntu, build-mac, build-windows]
#    runs-on: self-hosted
#
#    steps:
#      - name: Delete drafts
#        uses: hugo19941994/delete-draft-releases@v1.0.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - uses: actions/download-artifact@v2
#        with:
#          # created by 'build-ubuntu'
#          name: ginkou-x86_64
#      - uses: actions/download-artifact@v2
#        with:
#          # created by 'build-mac'
#          name: ginkou.dmg
#      - uses: actions/download-artifact@v2
#        with:
#          # created by 'build-windows'
#          name: ginkou.exe
#
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#
#        with:
#          files: |
#            ginkou.flatpak
#            ginkou.dmg
#            mellis-windows-setup.exe